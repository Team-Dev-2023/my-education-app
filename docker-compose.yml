version: '3.8'

services:
    mongo:
        image: mongo
        container_name: todo-mongo
        ports:
            - 27022:27017
        environment:
            - MONGO_INITDB_ROOT_USERNAME=admin
            - MONGO_INITDB_ROOT_PASSWORD=password2
        restart: on-failure
        networks:
            - nesjs-network
        volumes:
            - todoapp2:/data/db
    mongo_express:
        image: mongo-express
        ports: 
            - 8089:8081
        environment:
            - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
            - ME_CONFIG_MONGODB_ADMINPASSWORD=password
            - ME_CONFIG_MONGODB_SERVER=mongo
        networks:
            - nesjs-network
        depends_on:
            - 'mongo'
    dev:
        container_name: todoapp2-dev
        image: todoapp2-dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        # command: yarn run start:dev
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        volumes:
            - .:/todoapp2/
            - /todoapp2/node_modules
        # restart: unless-stopped
        depends_on:
            - 'mongo'
    prod:
        container_name: nestjs_api_prod
        image: todoapp2-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - nesjs-network
        volumes:
            - .:/todoapp2/
            - /todoapp2/node_modules
        restart: unless-stopped

networks:
    nesjs-network:
volumes:
    todoapp2: